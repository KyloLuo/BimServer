package org.bimserver.generatedclient;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.7.3
 * 2013-05-21T11:46:20.634+02:00
 * Generated source version: 2.7.3
 * 
 */
@WebServiceClient(name = "LowLevelInterfaceService", 
                  wsdlLocation = "generated/LowLevelInterface.wsdl",
                  targetNamespace = "org.buildingsmart.bimsie") 
public class LowLevelInterfaceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("org.buildingsmart.bimsie", "LowLevelInterfaceService");
    public final static QName LowLevelInterfacePort = new QName("org.buildingsmart.bimsie", "LowLevelInterfacePort");
    static {
        URL url = LowLevelInterfaceService.class.getResource("generated/LowLevelInterface.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(LowLevelInterfaceService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "generated/LowLevelInterface.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public LowLevelInterfaceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public LowLevelInterfaceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LowLevelInterfaceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns LowLevelInterface
     */
    @WebEndpoint(name = "LowLevelInterfacePort")
    public LowLevelInterface getLowLevelInterfacePort() {
        return super.getPort(LowLevelInterfacePort, LowLevelInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LowLevelInterface
     */
    @WebEndpoint(name = "LowLevelInterfacePort")
    public LowLevelInterface getLowLevelInterfacePort(WebServiceFeature... features) {
        return super.getPort(LowLevelInterfacePort, LowLevelInterface.class, features);
    }

}
