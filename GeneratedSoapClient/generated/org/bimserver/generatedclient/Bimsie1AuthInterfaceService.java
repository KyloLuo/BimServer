package org.bimserver.generatedclient;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.7.3
 * 2013-05-31T16:04:23.864+02:00
 * Generated source version: 2.7.3
 * 
 */
@WebServiceClient(name = "Bimsie1AuthInterfaceService", 
                  wsdlLocation = "generated/Bimsie1AuthInterface.wsdl",
                  targetNamespace = "org.buildingsmart.bimsie1") 
public class Bimsie1AuthInterfaceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("org.buildingsmart.bimsie1", "Bimsie1AuthInterfaceService");
    public final static QName Bimsie1AuthInterfacePort = new QName("org.buildingsmart.bimsie1", "Bimsie1AuthInterfacePort");
    static {
        URL url = Bimsie1AuthInterfaceService.class.getResource("generated/Bimsie1AuthInterface.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(Bimsie1AuthInterfaceService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "generated/Bimsie1AuthInterface.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public Bimsie1AuthInterfaceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Bimsie1AuthInterfaceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Bimsie1AuthInterfaceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns Bimsie1AuthInterface
     */
    @WebEndpoint(name = "Bimsie1AuthInterfacePort")
    public Bimsie1AuthInterface getBimsie1AuthInterfacePort() {
        return super.getPort(Bimsie1AuthInterfacePort, Bimsie1AuthInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Bimsie1AuthInterface
     */
    @WebEndpoint(name = "Bimsie1AuthInterfacePort")
    public Bimsie1AuthInterface getBimsie1AuthInterfacePort(WebServiceFeature... features) {
        return super.getPort(Bimsie1AuthInterfacePort, Bimsie1AuthInterface.class, features);
    }

}
