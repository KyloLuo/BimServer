package org.bimserver.pb;

/******************************************************************************
 * Copyright (C) 2009-2014  BIMserver.org
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *****************************************************************************/
import "ServiceInterface.proto";
import "AdminInterface.proto";
import "MetaInterface.proto";
import "SettingsInterface.proto";
import "AuthInterface.proto";
import "PluginInterface.proto";
option java_generic_services = true;

option java_outer_classname = "Bimsie1ServiceInterfaceImpl";

option optimize_for = SPEED;

service Bimsie1ServiceInterface {
	rpc addExtendedDataToRevision (AddExtendedDataToRevisionRequest) returns (VoidResponse);

	rpc addProject (AddProjectRequest) returns (AddProjectResponse);

	rpc testFunction (TestFunctionRequest) returns (TestFunctionRequestResponse);

	rpc addProjectAsSubProject (AddProjectAsSubProjectRequest) returns (AddProjectAsSubProjectResponse);

	rpc branchToExistingProject (BranchToExistingProjectRequest) returns (BranchToExistingProjectResponse);

	rpc branchToNewProject (BranchToNewProjectRequest) returns (BranchToNewProjectResponse);

	rpc checkin (CheckinRequest) returns (CheckinResponse);

	rpc checkinFromUrl (CheckinFromUrlRequest) returns (CheckinFromUrlResponse);

	rpc checkout (CheckoutRequest) returns (CheckoutResponse);

	rpc deleteProject (DeleteProjectRequest) returns (DeleteProjectResponse);

	rpc download (DownloadRequest) returns (DownloadResponse);

	rpc downloadByGuids (DownloadByGuidsRequest) returns (DownloadByGuidsResponse);

	rpc downloadByJsonQuery (DownloadByJsonQueryRequest) returns (DownloadByJsonQueryResponse);

	rpc downloadByNames (DownloadByNamesRequest) returns (DownloadByNamesResponse);

	rpc downloadByOids (DownloadByOidsRequest) returns (DownloadByOidsResponse);

	rpc downloadByTypes (DownloadByTypesRequest) returns (DownloadByTypesResponse);

	rpc downloadQuery (DownloadQueryRequest) returns (DownloadQueryResponse);

	rpc downloadRevisions (DownloadRevisionsRequest) returns (DownloadRevisionsResponse);

	rpc getAllExtendedDataOfRevision (GetAllExtendedDataOfRevisionRequest) returns (GetAllExtendedDataOfRevisionResponse);

	rpc getAllProjects (GetAllProjectsRequest) returns (GetAllProjectsResponse);

	rpc getAllProjectsSmall (GetAllProjectsSmallRequest) returns (GetAllProjectsSmallResponse);

	rpc getAllRevisionsOfProject (GetAllRevisionsOfProjectRequest) returns (GetAllRevisionsOfProjectResponse);

	rpc getDeserializerById (GetDeserializerByIdRequest) returns (GetDeserializerByIdResponse);

	rpc getDeserializerByName (GetDeserializerByNameRequest) returns (GetDeserializerByNameResponse);

	rpc getDownloadData (GetDownloadDataRequest) returns (GetDownloadDataResponse);

	rpc getExtendedData (GetExtendedDataRequest) returns (GetExtendedDataResponse);

	rpc getExtendedDataSchemaById (GetExtendedDataSchemaByIdRequest) returns (GetExtendedDataSchemaByIdResponse);

	rpc getExtendedDataSchemaByNamespace (GetExtendedDataSchemaByNamespaceRequest) returns (GetExtendedDataSchemaByNamespaceResponse);

	rpc getProjectByPoid (GetProjectByPoidRequest) returns (GetProjectByPoidResponse);

	rpc getProjectSmallByPoid (GetProjectSmallByPoidRequest) returns (GetProjectSmallByPoidResponse);

	rpc getProjectsByName (GetProjectsByNameRequest) returns (GetProjectsByNameResponse);

	rpc getQueryEngineById (GetQueryEngineByIdRequest) returns (GetQueryEngineByIdResponse);

	rpc getQueryEngineByName (GetQueryEngineByNameRequest) returns (GetQueryEngineByNameResponse);

	rpc getRevision (GetRevisionRequest) returns (GetRevisionResponse);

	rpc getSerializerByContentType (GetSerializerByContentTypeRequest) returns (GetSerializerByContentTypeResponse);

	rpc getSerializerById (GetSerializerByIdRequest) returns (GetSerializerByIdResponse);

	rpc getSerializerByName (GetSerializerByNameRequest) returns (GetSerializerByNameResponse);

	rpc getSubProjects (GetSubProjectsRequest) returns (GetSubProjectsResponse);

	rpc getSuggestedDeserializerForExtension (GetSuggestedDeserializerForExtensionRequest) returns (GetSuggestedDeserializerForExtensionResponse);

	rpc terminateLongRunningAction (TerminateLongRunningActionRequest) returns (VoidResponse);

	rpc undeleteProject (UndeleteProjectRequest) returns (UndeleteProjectResponse);

}

message AddExtendedDataToRevisionRequest {
	optional int64 roid = 1;
	optional SExtendedData extendedData = 2;
}

message AddProjectRequest {
	optional string projectName = 1;
	optional string schema = 2;
	optional string description = 3;
}

message AddProjectResponse {
	optional string errorMessage = 1;
	optional SProject value = 2;
}


message TestFunctionResponse {
	optional string projectName = 1;
	optional string schema = 2;
}

message TestFunctionRequest {
	optional string errorMessage = 1;
	optional SProject value = 2;
}

message AddProjectAsSubProjectRequest {
	optional string projectName = 1;
	optional int64 parentPoid = 2;
	optional string schema = 3;
}

message AddProjectAsSubProjectResponse {
	optional string errorMessage = 1;
	optional SProject value = 2;
}

message BranchToExistingProjectRequest {
	optional int64 roid = 1;
	optional int64 destPoid = 2;
	optional string comment = 3;
	optional bool sync = 4;
}

message BranchToExistingProjectResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message BranchToNewProjectRequest {
	optional int64 roid = 1;
	optional string projectName = 2;
	optional string comment = 3;
	optional bool sync = 4;
}

message BranchToNewProjectResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message CheckoutRequest {
	optional int64 roid = 1;
	optional int64 serializerOid = 2;
	optional bool sync = 3;
}

message CheckoutResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message DeleteProjectRequest {
	optional int64 poid = 1;
}

message DeleteProjectResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message DownloadRequest {
	optional int64 roid = 1;
	optional int64 serializerOid = 2;
	optional bool showOwn = 3;
	optional bool sync = 4;
}

message DownloadResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message DownloadByGuidsRequest {
	repeated int64 roids = 1;
	repeated string guids = 2;
	optional int64 serializerOid = 3;
	optional bool deep = 4;
	optional bool sync = 5;
}

message DownloadByGuidsResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message DownloadByJsonQueryRequest {
	repeated int64 roids = 1;
	optional string jsonQuery = 2;
	optional int64 serializerOid = 3;
	optional bool sync = 4;
}

message DownloadByJsonQueryResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message DownloadByNamesRequest {
	repeated int64 roids = 1;
	repeated string names = 2;
	optional int64 serializerOid = 3;
	optional bool deep = 4;
	optional bool sync = 5;
}

message DownloadByNamesResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message DownloadByOidsRequest {
	repeated int64 roids = 1;
	repeated int64 oids = 2;
	optional int64 serializerOid = 3;
	optional bool sync = 4;
	optional bool deep = 5;
}

message DownloadByOidsResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message DownloadByTypesRequest {
	repeated int64 roids = 1;
	optional string schema = 2;
	repeated string classNames = 3;
	optional int64 serializerOid = 4;
	optional bool includeAllSubtypes = 5;
	optional bool useObjectIDM = 6;
	optional bool deep = 7;
	optional bool sync = 8;
}

message DownloadByTypesResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message DownloadQueryRequest {
	optional int64 roid = 1;
	optional int64 qeid = 2;
	optional string code = 3;
	optional bool sync = 4;
	optional int64 serializerOid = 5;
}

message DownloadQueryResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message DownloadRevisionsRequest {
	repeated int64 roids = 1;
	optional int64 serializerOid = 2;
	optional bool sync = 3;
}

message DownloadRevisionsResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message GetAllExtendedDataOfRevisionRequest {
	optional int64 roid = 1;
}

message GetAllExtendedDataOfRevisionResponse {
	optional string errorMessage = 1;
	repeated SExtendedData value = 2;
}

message GetAllProjectsRequest {
	optional bool onlyTopLevel = 1;
	optional bool onlyActive = 2;
}

message GetAllProjectsResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetAllProjectsSmallRequest {
}

message GetAllProjectsSmallResponse {
	optional string errorMessage = 1;
	repeated SProjectSmall value = 2;
}

message GetAllRevisionsOfProjectRequest {
	optional int64 poid = 1;
}

message GetAllRevisionsOfProjectResponse {
	optional string errorMessage = 1;
	repeated SRevision value = 2;
}

message GetDeserializerByIdRequest {
	optional int64 oid = 1;
}

message GetDeserializerByIdResponse {
	optional string errorMessage = 1;
	optional SDeserializerPluginConfiguration value = 2;
}

message GetDeserializerByNameRequest {
	optional string deserializerName = 1;
}

message GetDeserializerByNameResponse {
	optional string errorMessage = 1;
	optional SDeserializerPluginConfiguration value = 2;
}

message GetDownloadDataRequest {
	optional int64 actionId = 1;
}

message SCheckoutResult {
	optional bytes file = 1;
	optional int64 oid = 2;
	optional string projectName = 3;
	optional int32 revisionNr = 4;
	optional int32 rid = 5;
}

message SDownloadResult {
	required string __actual_type = 1;
	optional SCheckoutResult __SCheckoutResult = 2;
	optional bytes file = 3;
	optional int64 oid = 4;
	optional string projectName = 5;
	optional int32 revisionNr = 6;
	optional int32 rid = 7;
}

message GetDownloadDataResponse {
	optional string errorMessage = 1;
	optional SDownloadResult value = 2;
}

message GetExtendedDataRequest {
	optional int64 oid = 1;
}

message GetExtendedDataResponse {
	optional string errorMessage = 1;
	optional SExtendedData value = 2;
}

message GetExtendedDataSchemaByIdRequest {
	optional int64 oid = 1;
}

message GetExtendedDataSchemaByIdResponse {
	optional string errorMessage = 1;
	optional SExtendedDataSchema value = 2;
}

message GetExtendedDataSchemaByNamespaceRequest {
	optional string namespace = 1;
}

message GetExtendedDataSchemaByNamespaceResponse {
	optional string errorMessage = 1;
	optional SExtendedDataSchema value = 2;
}

message GetProjectByPoidRequest {
	optional int64 poid = 1;
}

message GetProjectByPoidResponse {
	optional string errorMessage = 1;
	optional SProject value = 2;
}

message GetProjectSmallByPoidRequest {
	optional int64 poid = 1;
}

message GetProjectSmallByPoidResponse {
	optional string errorMessage = 1;
	optional SProjectSmall value = 2;
}

message GetProjectsByNameRequest {
	optional string name = 1;
}

message GetProjectsByNameResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetQueryEngineByIdRequest {
	optional int64 oid = 1;
}

message GetQueryEngineByIdResponse {
	optional string errorMessage = 1;
	optional SQueryEnginePluginConfiguration value = 2;
}

message GetQueryEngineByNameRequest {
	optional string name = 1;
}

message GetQueryEngineByNameResponse {
	optional string errorMessage = 1;
	optional SQueryEnginePluginConfiguration value = 2;
}

message GetRevisionRequest {
	optional int64 roid = 1;
}

message GetRevisionResponse {
	optional string errorMessage = 1;
	optional SRevision value = 2;
}

message GetSerializerByContentTypeRequest {
	optional string contentType = 1;
}

message GetSerializerByContentTypeResponse {
	optional string errorMessage = 1;
	optional SSerializerPluginConfiguration value = 2;
}

message GetSerializerByIdRequest {
	optional int64 oid = 1;
}

message GetSerializerByIdResponse {
	optional string errorMessage = 1;
	optional SSerializerPluginConfiguration value = 2;
}

message GetSerializerByNameRequest {
	optional string serializerName = 1;
}

message GetSerializerByNameResponse {
	optional string errorMessage = 1;
	optional SSerializerPluginConfiguration value = 2;
}

message GetSubProjectsRequest {
	optional int64 poid = 1;
}

message GetSubProjectsResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetSuggestedDeserializerForExtensionRequest {
	optional string extension = 1;
	optional int64 poid = 2;
}

message GetSuggestedDeserializerForExtensionResponse {
	optional string errorMessage = 1;
	optional SDeserializerPluginConfiguration value = 2;
}

message TerminateLongRunningActionRequest {
	optional int64 actionId = 1;
}

message UndeleteProjectRequest {
	optional int64 poid = 1;
}

message UndeleteProjectResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

