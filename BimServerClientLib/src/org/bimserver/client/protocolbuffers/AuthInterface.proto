package org.bimserver.pb;

/******************************************************************************
 * Copyright (C) 2009-2014  BIMserver.org
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *****************************************************************************/
import "ServiceInterface.proto";
import "AdminInterface.proto";
import "MetaInterface.proto";
import "SettingsInterface.proto";
option java_generic_services = true;

option java_outer_classname = "AuthInterfaceImpl";

option optimize_for = SPEED;

service AuthInterface {
	rpc changePassword (ChangePasswordRequest) returns (ChangePasswordResponse);

	rpc getLoggedInUser (GetLoggedInUserRequest) returns (GetLoggedInUserResponse);

	rpc requestPasswordChange (RequestPasswordChangeRequest) returns (VoidResponse);

	rpc setHash (SetHashRequest) returns (VoidResponse);

	rpc validateAccount (ValidateAccountRequest) returns (ValidateAccountResponse);

}

message ChangePasswordRequest {
	optional int64 uoid = 1;
	optional string oldPassword = 2;
	optional string newPassword = 3;
}

message ChangePasswordResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message GetLoggedInUserRequest {
}

message GetLoggedInUserResponse {
	optional string errorMessage = 1;
	optional SUser value = 2;
}

message RequestPasswordChangeRequest {
	optional string username = 1;
	optional string resetUrl = 2;
}

message SetHashRequest {
	optional int64 uoid = 1;
	optional bytes hash = 2;
	optional bytes salt = 3;
}

message ValidateAccountRequest {
	optional int64 uoid = 1;
	optional string token = 2;
	optional string password = 3;
}

message ValidateAccountResponse {
	optional string errorMessage = 1;
	optional SUser value = 2;
}

